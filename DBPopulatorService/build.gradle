buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1"
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.22.1'
	id 'com.palantir.docker-run' version '0.22.1'
}

group = 'com.dbpopulator'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.RELEASE")
}

apply plugin: "com.palantir.docker"
apply plugin: "com.palantir.docker-run"

dependencies {

//Lombok
	compileOnly 			'org.projectlombok:lombok'
	annotationProcessor 	'org.projectlombok:lombok'

//Springboot
	implementation 		  'org.springframework.boot:spring-boot-starter-web'
	implementation        "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation        "org.springframework.boot:spring-boot-starter-mail"
	implementation        "org.springframework.boot:spring-boot-starter-actuator"

	implementation        "org.springframework.boot:spring-boot-starter-hateoas"
	implementation        "org.springframework.data:spring-data-rest-hal-browser"
	implementation        "io.micrometer:micrometer-registry-prometheus"

//MongoDB
	implementation        "org.springframework.boot:spring-boot-starter-data-mongodb"
//        compile group: 'com.querydsl', name: 'querydsl-mongodb', version: '4.2.1'

//	implementation        'com.github.cloudyrock.mongock:mongock-core:2.0.0'
//	implementation        'com.github.cloudyrock.mongock:mongock-spring:2.0.0'  // with Spring (in addition to mongock-core)

	implementation 		  'net.ozwolf:mongo-trek:1.1.0'
	implementation        'io.github.kaiso.relmongo:relmongo:3.2.0'

//Logging
	implementation        "org.slf4j:jcl-over-slf4j"
	implementation        "org.slf4j:slf4j-api"
	implementation        "ch.qos.logback:logback-classic"
	implementation        'net.logstash.logback:logstash-logback-encoder:4.6'
	implementation        'org.springframework.boot:spring-boot-starter-logging'

//Hystrix/Feign
	implementation        'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation        'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation        'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'

//Money related stuff
	implementation        "org.javamoney:moneta:1.3"
	implementation        "org.zalando:jackson-datatype-money:1.1.1"

//Test related stuff
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

//Stuff
	implementation        "com.h2database:h2:1.4.192"
	implementation        'javax.validation:validation-api:2.0.1.Final'
	implementation        "org.hibernate.validator:hibernate-validator"
	implementation		   "com.squareup.okhttp3:okhttp:4.2.2"
	implementation 		   group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
	implementation 		  'org.jsoup:jsoup:1.12.1'
	implementation		   group: 'com.google.guava', name: 'guava', version: '11.0.2'
	implementation 		   'org.json:json:20190722'
	implementation        "org.modelmapper:modelmapper:2.3.2"

}

bootJar {
	baseName = 'dbpopulatorservice'
	version =  '1.0.0'
	mainClassName = 'com.dbpopulator.app.AppApplication'
}

task unpack(type: Copy) {
	dependsOn bootJar
//        from(zipTree(tasks.bootJar.outputs.files.singleFile))
	from(zipTree("build/libs/dbpopulatorservice-1.0.0.jar"))
	into("build/dependency")
}

docker {
	name "dbpopulatorservice"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
